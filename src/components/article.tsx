import styles from "@/components/article.module.css"
import Image from "next/image";
import { CSSProperties } from "react";

const Article = ({ children }: Readonly<{ children: React.ReactNode; }>) => {
    return (
        <article className="flex flex-col my-6 mx-4 min-h-screen">
            {children}
        </article>
    );
}
interface ArticleImageProps {
    src: string;
    alt: string;
    // width: number;
    // height: number;
};
const ArticleImage = (props: ArticleImageProps) => {
    const imageStyle: CSSProperties = {
        objectFit: "cover"
    }
    return (
        <div className="w-full max-w-[1920px] h-[500px] max-h-[500px] overflow-hidden relative mb-2">
            <Image
                src={props.src}
                alt={props.alt}
                style={imageStyle}
                // height={500}
                // width={props.width}
                fill
            />
        </div>
    );
}

const ArticleTitle = ({ children }: Readonly<{ children: React.ReactNode; }>) => {
    return (
        <div className="mb-6">
            <h1 className="text-3xl font-bold mb-2">{children}</h1>
            <hr className="border-black" />
        </div>
    );
}

const ArticleContent = ({ children }: Readonly<{ children: React.ReactNode; }>) => {
    return (
        <>
            <p className="italic mb-2">Content generated by ChatGPT, OpenAI, 2024-10-12</p>
            <div className={styles["article-contents"]}>{children}</div>
        </>
    );
}

interface ArticleQuoteProps {
    cite:string;
    children : Readonly<React.ReactNode>;
}

const ArticleQuote = (props:ArticleQuoteProps) => {
    return (
        <blockquote className={styles["article-quote"]} cite={props.cite}>
        <p className="text-xl italic">
            {props.children}
        </p>
    </blockquote>

    );
}

const ArticleBlock = ({children} : Readonly<{children:React.ReactNode}>) => {
    return (
        <blockquote cite="https://www.openai.com/chatgpt">
            {children}
        </blockquote>
    )
}

export { Article, ArticleImage, ArticleTitle, ArticleContent,ArticleQuote, ArticleBlock};